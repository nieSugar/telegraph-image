# Telegraph Image 环境变量配置示例
# 复制此文件为 .env 并填入实际值

# ===========================================
# Telegram Bot 配置（必需）
# ===========================================

# Telegram Bot Token
# 从 @BotFather 获取，格式如：123456789:ABCdefGHIjklMNOpqrsTUVwxyz
TG_BOT_TOKEN=your_telegram_bot_token_here

# Telegram Chat ID
# 可以是个人聊天ID、群组ID或频道ID
# 个人聊天ID格式：123456789
# 群组/频道ID格式：-1001234567890
TG_CHAT_ID=your_telegram_chat_id_here

# ===========================================
# Cloudflare D1 数据库配置（必需）
# ===========================================

# Cloudflare 账户ID
# 在 Cloudflare 仪表板右侧边栏可以找到
CF_ACCOUNT_ID=your_cloudflare_account_id_here

# Cloudflare API Token
# 需要有 D1:Edit 权限的 API Token
# 在 Cloudflare 仪表板 -> My Profile -> API Tokens 创建
CF_API_TOKEN=your_cloudflare_api_token_here

# Cloudflare D1 数据库ID
# 创建 D1 数据库后获得的 UUID
CF_DATABASE_ID=your_d1_database_id_here

# ===========================================
# 获取配置的步骤说明
# ===========================================

# 1. 创建 Telegram Bot：
#    - 在 Telegram 中搜索 @BotFather
#    - 发送 /newbot 命令
#    - 按提示设置 bot 名称和用户名
#    - 获得 Bot Token

# 2. 获取 Chat ID：
#    - 将 bot 添加到目标聊天/群组/频道
#    - 发送一条消息给 bot
#    - 访问：https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates
#    - 在返回的 JSON 中找到 chat.id

# 3. 设置 Cloudflare D1：
#    - 登录 Cloudflare 仪表板
#    - 进入 Workers & Pages -> D1
#    - 创建新的 D1 数据库
#    - 记录数据库ID
#    - 在 My Profile -> API Tokens 创建具有 D1:Edit 权限的 Token

# 4. 初始化数据库：
#    - 使用 sql/init.sql 文件初始化数据库表结构
#    - 可以通过 Cloudflare 仪表板的 D1 控制台执行 SQL

# ===========================================
# 安全注意事项
# ===========================================

# 1. 永远不要将 .env 文件提交到版本控制系统
# 2. 在生产环境中使用强密码和安全的 API Token
# 3. 定期轮换 API Token
# 4. 限制 API Token 的权限范围
# 5. 监控 API 使用情况，及时发现异常

# ===========================================
# 故障排除
# ===========================================

# 如果遇到配置问题，请检查：
# 1. 所有必需的环境变量都已设置
# 2. Telegram Bot Token 格式正确
# 3. Chat ID 格式正确（注意负号）
# 4. Cloudflare API Token 有足够的权限
# 5. D1 数据库已正确初始化

# 可以运行应用时查看控制台输出，会有详细的验证信息
